version: '3'

services:
  webserver:
    image: nginx
    container_name: test-nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./nginx:/etc/nginx/conf.d # Mounts the nginx folder to /etc/nginx/conf.d in the container so that the nginx.conf file is available to the container and the container can see the code changes
    ports:
      - "80:80"
    depends_on:
      - app
    restart: always

  app:
    image: nodeappimage
    container_name: nodeapp
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app # Mounts the backend folder to /app in the container so that the node_modules folder is available to the container and the container can see the code changes
      - /app/node_modules # Mounts the node_modules folder to /app/node_modules in the container so that the node_modules folder is available to the container
    ports:
      - "3000:3000"
    depends_on:
      - db
    restart: always
    env_file:
      - .env
    command: npm run dev

  db:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mysql
      MYSQL_USER: test
      MYSQL_PASSWORD: test
    ports:
      - "3306:3306"
    volumes:
      - mysqldata:/var/lib/mysql

volumes:
  mysqldata:
